<!-- sections/product-grid-custom.liquid -->

<section class="custom-product-grid">
  <div class="product-grid-row">
    {% for i in (1..6) %}
      {% assign product_id = section.settings['product' | append: i] %}
      {% if product_id != blank %}
        {% assign product_obj = all_products[product_id] %}
        <div class="product-block" data-handle="{{ product_obj.handle }}">
          <div class="product-image">
           {% for i in (1..6) %}
  {% assign product = all_products[section.settings['product' | append: i]] %}
  {% if product != nil %}
    <div class="product-block" data-handle="{{ product.handle }}">
      <div class="product-image">
        <img 
          src="{{ product.featured_image | img_url: '500x' }}" 
          alt="{{ product.title }}"
          width="250"
          height="250"
        >
      </div>
      <div class="product-content">
        <h3 class="product-title">{{ product.title }}</h3>
        <p class="product-price">{{ product.price | money }}</p>
        <button class="popup-btn" aria-label="Show product details">+</button>
      </div>
    </div>
  {% endif %}
{% endfor %}
Updated Correct Code Block (Grid loop):
text
{% for i in (1..6) %}
  {% assign product = all_products[section.settings['product' | append: i]] %}
  {% if product != nil %}
    <div class="product-block" data-handle="{{ product.handle }}">
      <div class="product-image">
        <img 
  src="{{ product.featured_image | img_url: '500x' }}" 
  alt="{{ product.title }}"
  width="250"
  height="250"
/>
      </div>
      <div class="product-content">
        <h3 class="product-title">{{ product.title }}</h3>
        <p class="product-price">{{ product.price | money }}</p>
        <button class="popup-btn" aria-label="Show product details">+</button>
      </div>
    </div>
  {% endif %}
{% endfor %}
Summary:
Sirf ek hi time per variable product banao â€” sab jaga wahi use karo.

all_products[] me handle dalna hai (ID nahi).

Isse dono errors fix ho jayenge.

Agar ab bhi koi Liquid warning ya error aaye, uska screenshot bhej dena, main immediately resolve kara dunga!


          </div>
          <div class="product-content">
            <h3 class="product-title">{{ product_obj.title }}</h3>
            <p class="product-price">{{ product_obj.price | money }}</p>
            <button class="popup-btn" aria-label="Show product details">+</button>
          </div>
        </div>
      {% endif %}
    {% endfor %}
  </div>

  <!-- Popup (initially hidden) -->
  <div class="product-popup-overlay" id="product-popup" style="display:none;">
    <div class="popup-content">
      <span id="close-popup" class="close">&times;</span>
     <img 
  id="popup-image" 
  src="" 
  alt="" 
  style="width:100%;max-width:240px;margin-bottom:16px;" 
  width="240" 
  height="240"
/>
      <h2 id="popup-title"></h2>
      <p id="popup-price" style="font-weight:700;"></p>
      <p id="popup-description"></p>
      <form id="popup-variant-form"></form>
      <button id="add-to-cart-btn">Add to Cart</button>
      <p id="popup-message" style="color:green;margin-top:10px;"></p>
    </div>
  </div>
</section>

<style>
  .custom-product-grid {padding: 44px 0; background: #fff; max-width: 1200px; margin: 0 auto;}
  .product-grid-row {display: grid; grid-template-columns: repeat(3, 1fr); gap: 32px;}
  .product-block {background: #f7f7f7; border-radius: 10px; padding: 24px 10px; box-shadow: 0 2px 8px rgba(0,0,0,0.07); position: relative;}
  .product-image img {max-width: 210px; border-radius: 7px;}
  .product-content {text-align:center;}
  .product-title {font-family: 'Jost', sans-serif; font-size: 21px; color:#222; margin: 12px 0 2px 0;}
  .product-price {font-family: 'Jost', sans-serif; font-size: 19px; color:#333; margin-bottom: 7px;}
  .popup-btn {font-size: 23px; background:#fff; border:2px solid #222; border-radius:50%; width:42px; height:42px; cursor:pointer; position: absolute; top:13px; right:13px; transition: background 0.18s;}
  .popup-btn:hover {background:#222; color:#fff;}
  .product-popup-overlay {position:fixed; top:0; left:0; width:100vw; height:100vh; background:rgba(0,0,0,0.38); display:flex; align-items:center; justify-content:center; z-index:900;}
  .popup-content {background:#fff; padding:18px 18px; border-radius:12px; max-width:370px; box-shadow:0 2px 24px rgba(0,0,0,0.21); position:relative; text-align:center; animation: fadeIn .28s;}
  .close {position:absolute; top:10px; right:17px; font-size:28px; color:#555; cursor:pointer;}
  #popup-variant-form select {margin-top:11px; font-size:16px;}
  #add-to-cart-btn {margin-top:16px; padding:9px 34px; background:#222; color:#fff; border:none; border-radius:5px; cursor:pointer; font-size:17px;}
  #add-to-cart-btn:hover {background:#111;}
  @media (max-width:900px) {.product-grid-row{grid-template-columns:1fr 1fr;}}
  @media (max-width:600px){
    .custom-product-grid{padding:19px 0;}
    .product-grid-row{grid-template-columns:1fr;}
    .product-block{padding:12px 4px;}
    .product-title,.product-price{font-size:16px;}
  }
  @keyframes fadeIn {from{opacity:0; transform:scale(.92);} to{opacity:1; transform:scale(1);}}
</style>

<script>
document.addEventListener('DOMContentLoaded', function () {
  const popup = document.getElementById('product-popup');
  const closeBtn = document.getElementById('close-popup');
  const addToCartBtn = document.getElementById('add-to-cart-btn');
  const popupMessage = document.getElementById('popup-message');
  let currentProduct = null, currentVariants = [];

  // Open Popup
  document.querySelectorAll('.popup-btn').forEach(function (btn) {
    btn.addEventListener('click', function () {
      const parent = btn.closest('.product-block');
      const handle = parent.getAttribute('data-handle');
      fetch(`/products/${handle}.js`).then(res => res.json()).then(product => {
        popup.style.display = 'flex';
        currentProduct = product;
        document.getElementById('popup-image').src = product.images[0] || '';
        document.getElementById('popup-title').textContent = product.title;
        document.getElementById('popup-price').textContent = Shopify.formatMoney(product.price);
        document.getElementById('popup-description').textContent = product.description || '';
        // Variants rendering
        currentVariants = product.variants;
        let variantHTML = '';
        if (currentVariants.length > 1) {
          variantHTML += '<select id="variant-select">';
          product.variants.forEach(function (v) {
            variantHTML += `<option value="${v.id}">${v.title} (${Shopify.formatMoney(v.price)})</option>`;
          });
          variantHTML += '</select>';
        } else {
          variantHTML += `<input type="hidden" id="variant-select" value="${product.variants[0].id}">`;
        }
        document.getElementById('popup-variant-form').innerHTML = variantHTML;
        popupMessage.textContent = '';
      });
    });
  });

  // Close
  closeBtn.addEventListener('click', function () { popup.style.display = 'none'; });

  // Add to Cart logic
  addToCartBtn.addEventListener('click', function () {
    const vselect = document.getElementById('variant-select');
    const variantId = vselect.tagName === 'SELECT' ? vselect.value : vselect.value;
    // Check for Black & Medium
    let selectedVariant = currentVariants.find(v => v.id == variantId);
    let hasBlackMedium = false;
    if (selectedVariant && selectedVariant.options) {
      let optionStr = selectedVariant.options.join(' ').toLowerCase();
      if (optionStr.includes('black') && optionStr.includes('medium')) {hasBlackMedium = true;}
    }
    // Add selected product
    fetch('/cart/add.js', {
      method: 'POST', headers: {'Content-Type': 'application/json'},
      body: JSON.stringify({id: variantId, quantity: 1})
    })
    .then(res => res.json())
    .then(data => {
      popupMessage.textContent = 'Added to cart!';
      // Add Soft Winter Jacket if needed
      if (hasBlackMedium) {
        fetch('/search/suggest.json?q=soft+winter+jacket&type=product').then(r=>r.json()).then(suggest=>{
          let found = false;
          if(suggest.products && suggest.products.length>0) {
            for(let p of suggest.products){
              if(p.title.toLowerCase().includes('soft winter jacket')){
                fetch('/cart/add.js', {
                  method: 'POST',
                  headers: {'Content-Type': 'application/json'},
                  body: JSON.stringify({id: p.variants[0].id, quantity: 1})
                }).then(()=>{popupMessage.textContent += ' (Soft Winter Jacket added!)'});
                found=true; break;
              }
            }
          }
          if(!found){popupMessage.textContent += ' (Soft Winter Jacket NOT found)';}
        });
      }
    });
  });
});
</script>

{% schema %}
{
  "name": "Custom Product Grid",
  "settings": [
    { "type": "product", "id": "product1", "label": "Product 1" },
    { "type": "product", "id": "product2", "label": "Product 2" },
    { "type": "product", "id": "product3", "label": "Product 3" },
    { "type": "product", "id": "product4", "label": "Product 4" },
    { "type": "product", "id": "product5", "label": "Product 5" },
    { "type": "product", "id": "product6", "label": "Product 6" }
  ],
  "presets": [
    { "name": "Custom Product Grid" }
  ]
}
{% endschema %}
